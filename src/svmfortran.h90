! This file defines the pointers to C++ structures
! and explicit interfaces to the C++ routines

#define SvmFortranAddr type(c_ptr)
#define SvmParameter SvmFortranAddr
#define SvmProblem SvmFortranAddr
#define SvmModel SvmFortranAddr

interface

  subroutine SvmTrain(prob, param) bind (c)
    use iso_c_binding
    SvmProblem, value :: prob
    SvmParameter, value :: param
  end subroutine SvmTrain

  subroutine SvmDataFinalize(prob, param) bind(c)
    use iso_c_binding
    SvmProblem, value :: prob
    SvmParameter, value :: param
  end subroutine SvmDataFinalize

  function SvmProblemCreate(prob, n) bind (c)
    use iso_c_binding
    SvmProblem :: SvmProblemCreate
    SvmProblem, value :: prob
    integer(c_int), value :: n
  end function SvmProblemCreate

  function SvmProblemAddData(prob, y, yidx, xidx, xval, n) bind (c)
    use iso_c_binding
    SvmProblem :: SvmProblemAddData
    SvmProblem, value :: prob
    real(c_double), value :: y
    integer(c_int),value :: yidx
    integer(c_int) :: xidx(*)
    real(c_double) :: xval(*)
    integer(c_int), value :: n
  end function SvmProblemAddData

  subroutine SvmProblemPrintData(prob, i) bind(c)
    use iso_c_binding
    SvmProblem, value :: prob
    integer(c_int), value     :: i
  end subroutine SvmProblemPrintData

  function SvmParameterCreate(param) bind(c)
    use iso_c_binding
    SvmParameter :: SvmParameterCreate
    SvmParameter, value :: param
  end function SvmParameterCreate

  function SvmParameterSet(param, optstr, val) bind(c)
    use iso_c_binding
    SvmParameter :: SvmParameterSet
    SvmParameter, value :: param
    character(c_char) :: optstr(*)
    type(c_ptr), value :: val
  end function SvmParameterSet

  subroutine SvmParameterPrint(param) bind(c)
    use iso_c_binding
    SvmParameter, value :: param
  end subroutine SvmParameterPrint

end interface
